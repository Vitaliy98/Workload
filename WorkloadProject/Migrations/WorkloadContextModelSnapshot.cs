// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WorkloadProject.Models;

namespace WorkloadProject.Migrations
{
    [DbContext(typeof(WorkloadContext))]
    partial class WorkloadContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WorkloadProject.Models.Journal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Date");

                    b.Property<int?>("LessonId");

                    b.Property<string>("Theme");

                    b.Property<int?>("TimeLessonId");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("TimeLessonId");

                    b.ToTable("Journals");
                });

            modelBuilder.Entity("WorkloadProject.Models.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("HourLoad");

                    b.Property<int>("HoursWorked");

                    b.Property<int?>("SubjectId");

                    b.Property<int?>("TeacherId");

                    b.Property<int?>("TypeLessonId");

                    b.HasKey("Id");

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.HasIndex("TypeLessonId");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("WorkloadProject.Models.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Positions");
                });

            modelBuilder.Entity("WorkloadProject.Models.Subject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Subjects");
                });

            modelBuilder.Entity("WorkloadProject.Models.Teacher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("IsAdmin");

                    b.Property<string>("MiddleName");

                    b.Property<string>("Password");

                    b.Property<string>("Surname");

                    b.Property<int?>("positionId");

                    b.HasKey("Id");

                    b.HasIndex("positionId");

                    b.ToTable("Teachers");
                });

            modelBuilder.Entity("WorkloadProject.Models.TimeLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("Time");

                    b.HasKey("Id");

                    b.ToTable("TimeLessons");
                });

            modelBuilder.Entity("WorkloadProject.Models.TypeLesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("TypeLessons");
                });

            modelBuilder.Entity("WorkloadProject.Models.Journal", b =>
                {
                    b.HasOne("WorkloadProject.Models.Lesson", "Lesson")
                        .WithMany()
                        .HasForeignKey("LessonId");

                    b.HasOne("WorkloadProject.Models.TimeLesson", "TimeLesson")
                        .WithMany()
                        .HasForeignKey("TimeLessonId");
                });

            modelBuilder.Entity("WorkloadProject.Models.Lesson", b =>
                {
                    b.HasOne("WorkloadProject.Models.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId");

                    b.HasOne("WorkloadProject.Models.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId");

                    b.HasOne("WorkloadProject.Models.TypeLesson", "TypeLesson")
                        .WithMany()
                        .HasForeignKey("TypeLessonId");
                });

            modelBuilder.Entity("WorkloadProject.Models.Teacher", b =>
                {
                    b.HasOne("WorkloadProject.Models.Position", "position")
                        .WithMany()
                        .HasForeignKey("positionId");
                });
#pragma warning restore 612, 618
        }
    }
}
