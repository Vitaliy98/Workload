<link rel="stylesheet" type="text/css" href="css/styleAdmin.css">
<script src="~/js/showWindowsAdmin.js"></script>
@using WorkloadProject.Models;
@using Microsoft.EntityFrameworkCore
@{ 
    ViewBag.Title = "Workload";
    int[] arrayOfHoursWorked = GetHoursWorked();
    int[] arrayOfHourLoad = GetHourLoad();
    int[] arrayOfProcentHoursWorked = GetProcentHoursWorked(GetHoursWorked(), GetHourLoad());
    List<Teacher> listOfTeachers = Model.Teachers.ToList();
    Teacher te = null;
    
}
@model IndexViewModel
<br>

<div onclick="hideAllWindows()" id="mainWindow"></div>
<div id="secondWindowAddWorkload" class="secondWindow">

    <img class="close" onclick="showAddWorkload('none')" src="~/images/close.jpg" />
    <form  asp-controller="Home" asp-action="CreateLesson" method="post" class="hiddenForm">
            <label>Ф.И.О:</label>
            <select class="form-control" name="teacherId" style="width: 260px; float: right;">
                @foreach (Teacher item in ViewBag.Teachers)
                 {
                    te = @item;
                    <option value="@item.Id">@item.Surname @item.FirstName.First().@item.MiddleName.First()</option>
                 }
            </select>
            <br><br>
            <label>Предмет:</label>
            <select class="form-control" name="subjectId" style="width: 260px; float: right;">
                @foreach (Subject item in ViewBag.Subjects)
                 {
                    <option value="@item.Id">@item.Name</option>
                 }
            </select>
            <br><br>
            <label>Практ. часы:</label>
             <input type="text" name="PractHourLoad" maxlength="50" size="31" />
            <br><br>
            <label>Лекц. часы:</label>
            <input type="text" name="LectHourLoad" maxlength="50" size="31" />
            <br><br>
            <input type="submit" class="btn btn-success" value="Добавить" />
    </form>
</div>

<div id="secondWindowChangeWorkload" class="secondWindow">

    <img class="close" onclick="showChangeWorkload('none')" src="~/images/close.jpg" />
    <form asp-controller="Home" asp-action="ChangeLesson" method="post" class="hiddenForm">
        <label>Нагрузка:</label>
        <select class="form-control" name="lessonId" style="width: 260px; float: right;">
            @foreach (Lesson lesson in ViewBag.Lessons)
             {
                  <option value="@lesson.Id">@lesson.Subject.Name (@lesson.TypeLesson.Name)</option>
             }
        </select>
        <br><br>
        <label>Ф.И.О:</label>
        <select class="form-control" name="teacherId" style="width: 260px; float: right;">
            @foreach (Teacher item in ViewBag.Teachers)
            {
                <option value="@item.Id">@item.Surname @item.FirstName.First().@item.MiddleName.First()</option>
            }
        </select>
        <br><br>
        <label>Часы:</label>
        <input type="text" name="hourLoad" maxlength="50" size="31" />
        <br><br>
        <input type="submit" class="btn btn-success" value="Изменить" />
    </form>
</div>


<div id="secondWindowDeleteWorkload" class="secondWindow">

    <img class="close" onclick="showDeleteWorkload('none')" src="~/images/close.jpg" />
    <form asp-controller="Home" asp-action="DeleteLesson" method="post" class="hiddenForm">
        <label>Ф.И.О:</label>
        <select class="form-control" name="teacherId" style="width: 260px; float: right;">
            @foreach (Teacher item in ViewBag.Teachers)
            {
                <option value="@item.Id">@item.Surname @item.FirstName.First().@item.MiddleName.First()</option>
            }
        </select>
        <br><br>
        <label>Предмет:</label>
        <select class="form-control" name="subjectId" style="width: 260px; float: right;">
            @foreach (Subject item in ViewBag.Subjects)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <br><br>
        <label>Тип занятия:</label>
        <select class="form-control" name="typeLessonId" style="width: 260px; float: right;">
            @foreach (TypeLesson item in ViewBag.TypeLessons)
            {
                <option value="@item.Id">@item.Name</option>
            }
        </select>
        <br><br>
        <input type="submit" class="formSubmit" value="Удалить" />
    </form>
</div>



    <div display: inline-block;>
        <button id="buttonAddWorkload" class="secondButton" onclick="showAddWorkload('block')" >Add Workload</button>
        <button id="buttonChangeWorkload" class="secondButton" onclick="showChangeWorkload('block')">Change Workload</button>
        <button id="buttonDeleteWorkload" class="secondButton" onclick="showDeleteWorkload('block')">Delete Workload</button>
        <button id="buttonUpdateStatistics" class="secondButton">Update Statistics</button>
    </div>
<div class="userInfo" display: inline-block;>
    <h4 class="userInfo" >Welcome @ViewBag.User.FirstName</h4>
</div>
    <br><br>
<h3>Workload:</h3> <br>
<form method="get">
    <div class="form-inline">
        <label class="control-label">Фамилия: </label>
        @Html.TextBox("surname", Model.FilterViewModel.SelectedSurname, htmlAttributes: new { @class = "form-control" })

        <input type="submit" value="Фильтр" class="btn btn-default" />
    </div>
</form>
<br />
    <table class="table" border="1">
        <tr>
            <td><a asp-action="Index"
                     asp-route-sortOrder="@(Model.SortViewModel.SurnameSort)"
                     asp-route-surname="@(Model.FilterViewModel.SelectedSurname)">Ф.И.О</a>
            </td>
            @foreach (Lesson item in ViewBag.Lessons)
            {
            <td>@item.Subject.Name (@item.TypeLesson.Name)</td>
            }
        </tr>
        @foreach (Teacher item in Model.Teachers)
        {
        <tr>
            <td>@item.Surname @item.FirstName.First().@item.MiddleName.First()</td>
            @foreach (Lesson les in ViewBag.Lessons)
                {
                    if (@les.Teacher.FirstName == item.FirstName && @les.Teacher.MiddleName == @item.MiddleName && @les.Teacher.Surname == @item.Surname)
                    {
                <td>@les.HoursWorked h. of @les.HourLoad h.</td>
                    }
                    else
                    {
                <td>-</td>
                    }
                }
        </tr>
        }
    </table>
@if (Model.PageViewModel.HasPreviousPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber - 1)"
       asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-default btn">
        <i class="glyphicon glyphicon-chevron-left"></i>
        Назад
    </a>
}
@if (Model.PageViewModel.HasNextPage)
{
    <a asp-action="Index"
       asp-route-page="@(Model.PageViewModel.PageNumber + 1)"
       asp-route-surname="@(Model.FilterViewModel.SelectedSurname)"
       asp-route-sortorder="@(Model.SortViewModel.Current)"
       class="btn btn-default btn">
        Вперед
        <i class="glyphicon glyphicon-chevron-right"></i>
    </a>
}
<h3>Statistics:</h3> <br>
    <div id="Statistics" class="statistics">
        <table class="tableStatistic" border="1">
            @for (int i = 0; i < listOfTeachers.Count(); i++)
 {
        <tr>
            <td>@listOfTeachers.ElementAt(i).Surname @listOfTeachers.ElementAt(i).FirstName.First().@listOfTeachers.ElementAt(i).MiddleName.First()</td>
            <td>
                <div style='background-color:#20B2AA;display: inline-block;width:@GetWidthStatistic(@arrayOfProcentHoursWorked[i])px'>
                    &nbsp;
                    &nbsp;
                    @if(@GetWidthStatistic(@arrayOfProcentHoursWorked[i]) != 0)
                    {
                    <text>@arrayOfHoursWorked[i] of @arrayOfHourLoad[i]</text>
                    }

                </div>
                &nbsp;
                @arrayOfProcentHoursWorked[i]%
            </td>
        </tr>
}
        </table>
    </div>
    <br>

    @functions
    {
        public int[] GetHoursWorked()
        {
            List<Teacher> listOfTeachers = Model.Teachers.ToList();
            int[] arrayOfHoursWorked = new int[listOfTeachers.Count()];
            for (int i = 0; i < listOfTeachers.Count(); i++)
            {
                foreach (Lesson les in ViewBag.Lessons)
                {
                    if (@les.Teacher.FirstName == listOfTeachers.ElementAt(i).FirstName && @les.Teacher.MiddleName == listOfTeachers.ElementAt(i).MiddleName
                        && @les.Teacher.Surname == listOfTeachers.ElementAt(i).Surname)
                    {
                        arrayOfHoursWorked[i] += les.HoursWorked;
                    }
                }
            }
            return arrayOfHoursWorked;
        }
        public int[] GetHourLoad()
        {
            List<Teacher> listOfTeachers = Model.Teachers.ToList();
            int[] arrayOfHourLoad = new int[listOfTeachers.Count()];
            for (int i = 0; i < listOfTeachers.Count(); i++)
            {
                foreach (Lesson les in ViewBag.Lessons)
                {
                    if (@les.Teacher.FirstName == listOfTeachers.ElementAt(i).FirstName && @les.Teacher.MiddleName == listOfTeachers.ElementAt(i).MiddleName
                        && @les.Teacher.Surname == listOfTeachers.ElementAt(i).Surname)
                    {
                        arrayOfHourLoad[i] += les.HourLoad;
                    }
                }
            }
            return arrayOfHourLoad;
        }
        public int[] GetProcentHoursWorked(int[] arrayOfHoursWorked, int[] arrayOfHourLoad)
        {
            List<Teacher> listOfTeachers = Model.Teachers.ToList();
            int[] arrayOfProcentHoursWorked = new int[listOfTeachers.Count()];
            double secondValue = 0;
            for (int i = 0; i < arrayOfHoursWorked.Length; i++)
            {
                if (arrayOfHourLoad[i] != 0)
                {
                    secondValue = (arrayOfHoursWorked[i] * 100) / arrayOfHourLoad[i];
                    arrayOfProcentHoursWorked[i] = (int)Math.Ceiling(secondValue);
                }
                else
                {
                    arrayOfProcentHoursWorked[i] = 0;
                }
            }
            return arrayOfProcentHoursWorked;
        }
        public int GetWidthStatistic(int procentHoursWorked)
        {
            double secondValue = (procentHoursWorked * 750) / 100;
            return (int)Math.Ceiling(secondValue);
        }
    }
